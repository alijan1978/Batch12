3/19/2022
Recap
Abstract Classes in Java:

Abstract classes in java are the classes with abstract keyword. we use abstract classes to achieve abstraction.
It is the process of hiding implementation details and only showing the functionality to end user.

Advantages:
1- Reduces the complexity
2- Improves the maintainability
3- Can also enforce rules to a certain limit.

Disadvantages:
1. classes get tightly coupled since all child classes are tight to it...if we want to change,
if we want to bring any changes in child classes, we need to go one by one.

Example of Syntax:
Class Dog{
String name;
Static int legs=4;
//concrete class
}
Public abstract class Phone{
String make;
String model;
Static boolean has 5G = true;
}

Rules:

Abstract classes can have all the things that regular classes do, but we cannot create their objects directly
and if a class is inheriting from the abstract class, it must either provide the implementation for the
abstract method or it must be declared abstract.

1. We can't have final and abstract keywords with a method at the same time. Because the abstract is undefined and
       we implement them in extended class.
2. We can't have static and abstract keywords with a method at the same time.
3. abstract keyword with fields (variables) Not Allowed.

**********************************************************************************8
NEW Lesson

Interface:

Interfaces are also used to achieve abstraction in java. We can create an interface with the keyword interface.
Example:
// the fields/variables are always public, static, and final

interface Human{
public static final int legs=2;
public abstract void walk();
}